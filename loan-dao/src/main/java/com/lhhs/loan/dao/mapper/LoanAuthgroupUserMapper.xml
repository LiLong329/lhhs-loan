<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lhhs.loan.dao.LoanAuthgroupUserMapper" >
  <resultMap id="BaseResultMap" type="com.lhhs.loan.dao.domain.LoanAuthgroupUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="group_id" property="groupId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, group_id, user_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from loan_authgroup_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from loan_authgroup_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lhhs.loan.dao.domain.LoanAuthgroupUser" >
    insert into loan_authgroup_user (id, group_id, user_id
      )
    values (#{id,jdbcType=INTEGER}, #{groupId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lhhs.loan.dao.domain.LoanAuthgroupUser" >
    insert into loan_authgroup_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="groupId != null" >
        group_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="groupId != null" >
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lhhs.loan.dao.domain.LoanAuthgroupUser" >
    update loan_authgroup_user
    <set >
      <if test="groupId != null" >
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lhhs.loan.dao.domain.LoanAuthgroupUser" >
    update loan_authgroup_user
    set group_id = #{groupId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 自定义方法区 -->
  <delete id="deleteByUserId" parameterType="java.lang.Integer" >
    delete from loan_authgroup_user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <select id="selectAuthgroupIdsByUserId" resultType="int" parameterType="java.lang.Integer" >
    select group_id
    from loan_authgroup_user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <select id="getAuthGroupByUserId" parameterType="com.lhhs.loan.dao.domain.LoanAuthgroupUser" resultType="com.lhhs.loan.dao.domain.LoanAuthgroupUser">
	select DISTINCT lau.id, lau.user_id, lau.group_id, la.group_name, la.status, la.type, la.data_zone,
		lag.authority_group_id, lag.authority_id, lag.creat_time, lag.data_owner, lag.dept_id, lag.group_id, lag.org_id
	from loan_authgroup_user lau left join loan_authgroup la
		on lau.group_id = la.group_id
		left join loan_authority_group lag 
		on la.group_id = lag.group_id 
	where 1=1
	<if test="userId != null" >
		and lau.user_id=#{userId}
	</if>
	<if test="status != null and status != '' " >
		and la.status=#{status}
	</if>
  </select>
  
</mapper>