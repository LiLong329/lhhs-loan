<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lhhs.loan.dao.LoanRoleNodeMapper" >
  <resultMap id="BaseResultMap" type="com.lhhs.loan.dao.domain.LoanRoleNode" >
    <id column="lrn_id" property="lrnId" jdbcType="INTEGER" />
    <result column="role_id" property="roleId" jdbcType="VARCHAR" />
    <result column="node_id" property="nodeId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    lrn_id, role_id, node_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from loan_role_node
    where lrn_id = #{lrnId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from loan_role_node
    where lrn_id = #{lrnId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lhhs.loan.dao.domain.LoanRoleNode" >
    insert into loan_role_node (lrn_id, role_id, node_id
      )
    values (#{lrnId,jdbcType=INTEGER}, #{roleId,jdbcType=VARCHAR}, #{nodeId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lhhs.loan.dao.domain.LoanRoleNode" >
    insert into loan_role_node
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="lrnId != null" >
        lrn_id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="nodeId != null" >
        node_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="lrnId != null" >
        #{lrnId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="nodeId != null" >
        #{nodeId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lhhs.loan.dao.domain.LoanRoleNode" >
    update loan_role_node
    <set >
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="nodeId != null" >
        node_id = #{nodeId,jdbcType=VARCHAR},
      </if>
    </set>
    where lrn_id = #{lrnId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lhhs.loan.dao.domain.LoanRoleNode" >
    update loan_role_node
    set role_id = #{roleId,jdbcType=VARCHAR},
      node_id = #{nodeId,jdbcType=VARCHAR}
    where lrn_id = #{lrnId,jdbcType=INTEGER}
  </update>
  <!-- 根据角色ID删除节点关系-->
   <delete id="deleteByRoleId" parameterType="java.lang.String" >
    delete from loan_role_node
    where role_id = #{roleId,jdbcType=VARCHAR}
  </delete>
  
   <!-- 根据角色列表查询所有节点-->
  <select id="queryNodeByListRoleId" resultType="java.lang.String" parameterType="java.util.List">
         select distinct node_id from loan_role_node where  role_id in 
          <foreach collection="list" index="index" item="item" open="(" separator="," close=")">  
            #{item}  
         </foreach>
  </select>
</mapper>